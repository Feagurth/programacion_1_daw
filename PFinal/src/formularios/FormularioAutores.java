/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import db.BaseDeDatos;
import db.Resultado;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import utiles.Mensajes;
import utiles.Validaciones;

/**
 *
 * @author Super
 */
public class FormularioAutores extends javax.swing.JInternalFrame {

    private final BaseDeDatos baseDatos;
    private int modo;

    /**
     * Creates new form FormularioAdd
     */
    public FormularioAutores() {
        initComponents();
        lblIdAutor.setVisible(false);

        baseDatos = new BaseDeDatos("root", "", "127.0.0.1:3306", "libros");

        cmbCampo.setSelectedIndex(1);
        cmbOrden.setSelectedIndex(0);
        btnAceptar.setVisible(false);
        btnCancelar.setVisible(false);

    }

    private void recargarGrid() {

        String orden = "";
        String filtro = "";

        if (cmbCampo.getSelectedIndex() == 0) {
            if (cmbOrden.getSelectedIndex() == 0) {
                orden += "primerNombre ASC";
            } else {
                orden += "primerNombre DESC";
            }
        } else {
            if (cmbOrden.getSelectedIndex() == 0) {
                orden += "apellidoPaterno ASC";
            } else {
                orden += "apellidoPaterno DESC";
            }
        }

        if (cmbFiltro.getSelectedIndex() == 0) {
            filtro += "primerNombre LIKE '" + txtFiltro.getText() + "%'";
        } else {
            filtro += "apellidoPaterno LIKE '" + txtFiltro.getText() + "%'";
        }

        Resultado datos = baseDatos.consultar(
                new String[]{"IdAutor", "primerNombre As Nombre", "apellidoPaterno As Apellido"},
                new String[]{"Autores"},
                new String[]{filtro},
                new String[]{orden});

        try {
            tblAutores.setModel(BaseDeDatos.buildTableModel(datos.getResultado()));
            tblAutores.removeColumn(tblAutores.getColumnModel().getColumn(0));

            if (!datos.getResultado().isClosed()) {
                datos.getResultado().close();
            }

        } catch (SQLException ex) {
            Mensajes.mostrarMensaje(ex.getMessage(), Mensajes.TipoMensaje.ERROR);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelOrden = new javax.swing.JPanel();
        cmbCampo = new javax.swing.JComboBox();
        cmbOrden = new javax.swing.JComboBox();
        lblOrden = new javax.swing.JLabel();
        lblCampo = new javax.swing.JLabel();
        panelFiltro = new javax.swing.JPanel();
        cmbFiltro = new javax.swing.JComboBox();
        lblFiltro = new javax.swing.JLabel();
        lblCampoFiltro = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        panelTabla = new javax.swing.JScrollPane();
        tblAutores = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        ;
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        lblApellido = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        btnAÃ±adir = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        lblIdAutor = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(446, 532));
        setMinimumSize(new java.awt.Dimension(446, 532));

        panelOrden.setBorder(javax.swing.BorderFactory.createTitledBorder("Orden"));

        cmbCampo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Apellido" }));
        cmbCampo.setMaximumSize(new java.awt.Dimension(88, 20));
        cmbCampo.setMinimumSize(new java.awt.Dimension(88, 20));
        cmbCampo.setPreferredSize(new java.awt.Dimension(88, 20));
        cmbCampo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbCampoItemStateChanged(evt);
            }
        });

        cmbOrden.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ascendente", "Descendente" }));
        cmbOrden.setMaximumSize(new java.awt.Dimension(88, 20));
        cmbOrden.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbOrdenItemStateChanged(evt);
            }
        });

        lblOrden.setText("Orden");

        lblCampo.setText("Campo");

        javax.swing.GroupLayout panelOrdenLayout = new javax.swing.GroupLayout(panelOrden);
        panelOrden.setLayout(panelOrdenLayout);
        panelOrdenLayout.setHorizontalGroup(
            panelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblCampo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbCampo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(24, 24, 24)
                .addComponent(lblOrden)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelOrdenLayout.setVerticalGroup(
            panelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelOrdenLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(panelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmbCampo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOrden)
                    .addComponent(lblCampo))
                .addContainerGap())
        );

        panelFiltro.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Apellido" }));
        cmbFiltro.setMaximumSize(new java.awt.Dimension(88, 20));
        cmbFiltro.setMinimumSize(new java.awt.Dimension(88, 20));
        cmbFiltro.setPreferredSize(new java.awt.Dimension(88, 20));
        cmbFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbFiltroItemStateChanged(evt);
            }
        });

        lblFiltro.setText("Orden");

        lblCampoFiltro.setText("Campo");

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout panelFiltroLayout = new javax.swing.GroupLayout(panelFiltro);
        panelFiltro.setLayout(panelFiltroLayout);
        panelFiltroLayout.setHorizontalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(lblCampoFiltro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbFiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFiltro)
                .addGap(18, 18, 18)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelFiltroLayout.setVerticalGroup(
            panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFiltroLayout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(panelFiltroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(cmbFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(lblFiltro)
                    .addComponent(lblCampoFiltro)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        tblAutores.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblAutores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblAutores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAutoresMouseClicked(evt);
            }
        });
        panelTabla.setViewportView(tblAutores);

        txtNombre.setEditable(false);

        txtApellidos.setEditable(false);

        lblApellido.setText("Apellido");

        lblNombre.setText("Nombre");

        btnAÃ±adir.setText("AÃ±adir");
        btnAÃ±adir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAÃ±adirActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptar.setText("Aceptar");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(txtApellidos))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIdAutor)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(lblApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTabla, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(panelFiltro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAÃ±adir, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblIdAutor)
                .addGap(12, 12, 12)
                .addComponent(panelOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(lblApellido))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAÃ±adir)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbOrdenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbOrdenItemStateChanged
        recargarGrid();
    }//GEN-LAST:event_cmbOrdenItemStateChanged

    private void cmbCampoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbCampoItemStateChanged
        recargarGrid();
    }//GEN-LAST:event_cmbCampoItemStateChanged

    private void tblAutoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAutoresMouseClicked
        lblIdAutor.setText(String.valueOf(tblAutores.getModel().getValueAt(tblAutores.rowAtPoint(evt.getPoint()), 0)));
        txtNombre.setText((String) tblAutores.getValueAt(tblAutores.rowAtPoint(evt.getPoint()), 0));
        txtApellidos.setText((String) tblAutores.getValueAt(tblAutores.rowAtPoint(evt.getPoint()), 1));

    }//GEN-LAST:event_tblAutoresMouseClicked

    private void btnAÃ±adirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAÃ±adirActionPerformed
        modoEdicion(true);
        modo = 1;
        txtNombre.setText("");
        txtApellidos.setText("");
    }//GEN-LAST:event_btnAÃ±adirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        modoEdicion(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (tblAutores.getSelectedRowCount() != 0) {
            modoEdicion(true);
            modo = 0;

        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        if (tblAutores.getSelectedRowCount() != 0) {
            if (Mensajes.pedirConfirmacion(String.format(
                    "%s %s%nÂ¿Desea eliminar este autor?",
                    txtNombre.getText(),
                    txtApellidos.getText()))) {

                Resultado datos = baseDatos.eliminar(
                        new String[]{"Autores"},
                        new String[]{"idAutor = " + lblIdAutor.getText()});

                if (datos.isOperacionCorrecta()) {
                    Mensajes.mostrarMensaje("OperaciÃ³n realizada correctamente", Mensajes.TipoMensaje.INFORMACION);
                    recargarGrid();
                } else {
                    Mensajes.mostrarMensaje(datos.getMensaje(), Mensajes.TipoMensaje.ERROR);
                }
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private boolean validarDatos() {
        boolean salida = true;

        if (!Validaciones.validarDato(txtNombre.getText(), Validaciones.TipoValidacion.CADENA)) {
            salida = false;
        }

        if (!Validaciones.validarDato(txtApellidos.getText(), Validaciones.TipoValidacion.CADENA)) {
            salida = false;
        }

        return salida;
    }


    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed

        if (validarDatos()) {

            if (modo == 0) {

                Resultado datos = baseDatos.actualizar(
                        new String[]{"primerNombre", "apellidoPaterno"},
                        new String[]{"Autores"},
                        new String[]{"idAutor = " + lblIdAutor.getText()},
                        new String[]{txtNombre.getText(), txtApellidos.getText()});

                if (datos.isOperacionCorrecta()) {
                    Mensajes.mostrarMensaje("OperaciÃ³n realizada correctamente", Mensajes.TipoMensaje.INFORMACION);
                    recargarGrid();

                } else {
                    Mensajes.mostrarMensaje(datos.getMensaje(), Mensajes.TipoMensaje.ERROR);
                }

            } else {

                Resultado datos = baseDatos.actualizar(
                        null,
                        new String[]{"Autores"},
                        null,
                        new String[]{"0", txtNombre.getText(), txtApellidos.getText()});

                if (datos.isOperacionCorrecta()) {
                    Mensajes.mostrarMensaje("OperaciÃ³n realizada correctamente", Mensajes.TipoMensaje.INFORMACION);
                    recargarGrid();

                } else {
                    Mensajes.mostrarMensaje(datos.getMensaje(), Mensajes.TipoMensaje.ERROR);
                }

            }

            modoEdicion(false);
        } else {
            Mensajes.mostrarMensaje("Debe introducir datos correctos para poder continuar", Mensajes.TipoMensaje.AVISO);
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void cmbFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbFiltroItemStateChanged
        recargarGrid();
    }//GEN-LAST:event_cmbFiltroItemStateChanged

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        recargarGrid();
    }//GEN-LAST:event_txtFiltroKeyReleased

    private void modoEdicion(boolean modo) {
        btnAÃ±adir.setVisible(!modo);
        btnModificar.setVisible(!modo);
        btnEliminar.setVisible(!modo);
        btnAceptar.setVisible(modo);
        btnCancelar.setVisible(modo);
        tblAutores.setEnabled(!modo);
        cmbCampo.setEnabled(!modo);
        cmbOrden.setEnabled(!modo);
        cmbFiltro.setEnabled(!modo);
        tblAutores.setColumnSelectionAllowed(false);
        tblAutores.setCellSelectionEnabled(false);
        tblAutores.setRowSelectionAllowed(!modo);
        txtApellidos.setEditable(modo);
        txtNombre.setEditable(modo);
        txtFiltro.setEditable(!modo);
        if (modo) {
            MouseListener[] listeners = tblAutores.getMouseListeners();
            for (MouseListener l : listeners) {
                tblAutores.removeMouseListener(l);
            }

            txtNombre.requestFocus();

        } else {
            tblAutores.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblAutoresMouseClicked(evt);
                }
            });
            tblAutores.updateUI();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAÃ±adir;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JComboBox cmbCampo;
    private javax.swing.JComboBox cmbFiltro;
    private javax.swing.JComboBox cmbOrden;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCampo;
    private javax.swing.JLabel lblCampoFiltro;
    private javax.swing.JLabel lblFiltro;
    private javax.swing.JLabel lblIdAutor;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblOrden;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelOrden;
    private javax.swing.JScrollPane panelTabla;
    private javax.swing.JTable tblAutores;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
