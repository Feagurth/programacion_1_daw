/*
 * Copyright (C) 2014 Luis Cabrerizo Gómez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package formularios;

/**
 * Clase para contener el nombre y apellidos de un autor a insertar en la base
 * de datos a través de una búsqueda en Google Books
 *
 * @author Luis Cabrerizo Gómez
 */
public class PanelAutores extends javax.swing.JPanel {

    // Variables de clase
    private String nombre;
    private String apellidos;
    private boolean activo;

    /**
     * Constructor de la clase
     *
     * @param nombre Nombre del autor a mostrar en el campo nombre
     * @param apellidos Apellido del autor a mostrar en el campo nombre
     * @param activo Marca el checkbox para pedir inserción del autor
     */
    public PanelAutores(String nombre, String apellidos, boolean activo) {
        this.nombre = nombre;
        this.apellidos = apellidos;
        this.activo = activo;

        initComponents();

        txtNombre.setText(this.nombre);
        txtApellidos.setText(this.apellidos);
        chkGrabar.setSelected(this.activo);
        this.setVisible(true);

    }

    /**
     * Constructor de la clase
     */
    public PanelAutores() {
        initComponents();
        this.setVisible(true);
    }

    /**
     * Método que nos devuelve el valor del nombre del autor
     *
     * @return El nombre del autor
     */
    public String getNombre() {
        return this.nombre;
    }

    /**
     * Método que nos devuelve el valor de los apellidos del autor
     *
     * @return Los apellidos del autor
     */
    public String getApellidos() {
        return this.apellidos;
    }

    /**
     * Método que nos devuelve el valor del check de verificación de inserción
     *
     * @return El valor del check de verificación de inserción
     */
    public boolean isActivo() {
        return this.activo;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        chkGrabar = new javax.swing.JCheckBox();
        txtApellidos = new javax.swing.JTextField();

        setMaximumSize(new java.awt.Dimension(393, 48));
        setMinimumSize(new java.awt.Dimension(393, 48));
        setPreferredSize(new java.awt.Dimension(393, 48));

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        chkGrabar.setSelected(true);
        chkGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkGrabarActionPerformed(evt);
            }
        });

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Evento de pulsación del botón de activado
     *
     * @param evt Evento
     */
    private void chkGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkGrabarActionPerformed
        this.activo = chkGrabar.isSelected();
    }//GEN-LAST:event_chkGrabarActionPerformed

    /**
     * Evento para el soltado de tecla en el control
     * @param evt Evento
     */
    private void txtApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyReleased
        this.apellidos = txtApellidos.getText();
    }//GEN-LAST:event_txtApellidosKeyReleased

    /**
     * Evento para el soltado de tecla en el control
     * @param evt Evento
     */
    private void txtNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyReleased
        this.nombre = txtNombre.getText();
    }//GEN-LAST:event_txtNombreKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkGrabar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
