/*
 * Copyright (C) 2014 Luis Cabrerizo Gómez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package formularios;

import java.awt.Frame;
import java.awt.GridLayout;
import javax.swing.JPanel;

/**
 * Clase para mostrar los autores a insertar la base de datos a través de una
 * búsqueda en Google Books
 *
 * @author Luis Cabrerizo Gómez
 */
public class DialogInsertarAutores extends javax.swing.JDialog {

    String[] Autores;

    /**
     * Constructor de la clase
     *
     * @param parent Padre de la ventana
     * @param modal Valor para especificar si la ventana es modal
     */
    public DialogInsertarAutores(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * Constructor de la clase
     * @param parent Padre de la ventana
     * @param modal Valor para especificar si la ventana es modal
     * @param Autores Autores a mostrar
     */
    public DialogInsertarAutores(Frame parent, boolean modal, String[] Autores) {
        super(parent, modal);
        initComponents();

        this.Autores = Autores;

        // Especificamos que la ventana se mostrará en una posición relativa
        // a su ventana padre
        this.setLocationRelativeTo(this.getParent());

        // Definimos un nuevo panel que contendrá los controles PanelAutores
        JPanel principal = new JPanel();

        // Espeficiamos un GridLayout de n filas y 1 sola columna
        principal.setLayout(new GridLayout(0, 1));

        // Definimos un nuevo objeto PanelAutores
        PanelAutores panel;

        // Iteramos por los autores a mostrar
        for (String autor : Autores) {
            
            // Creamos el objeto PanelAutores con los valores
            // del nombre y los apellidos
            panel = new PanelAutores(autor, autor, false);

            // Lo añadimos al panel creado anteriormente
            principal.add(panel);
        }

        // Pintamos y validamos el panel
        principal.revalidate();
        principal.repaint();

        // Lo añadimos al JViewPort del panel de scroll
        panelScroll.getViewport().add(principal);

        // Pintamos y validamos el panel de scroll
        panelScroll.revalidate();
        panelScroll.repaint();

        // Pintamos, validamos y agrupamos la ventana modal
        this.revalidate();
        this.pack();
        this.repaint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelScroll = new javax.swing.JScrollPane();
        btnAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insertar Autores");

        panelScroll.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        btnAceptar.setText("Aceptar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelScroll)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 342, Short.MAX_VALUE)
                        .addComponent(btnAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAceptar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogInsertarAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogInsertarAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogInsertarAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogInsertarAutores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                DialogInsertarAutores dialog = new DialogInsertarAutores(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JScrollPane panelScroll;
    // End of variables declaration//GEN-END:variables
}
