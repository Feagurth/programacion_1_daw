/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pruebasupermercado;

/**
 *
 * @author Super
 */
public class Supermercado extends javax.swing.JFrame {

    /**
     * Creates new form Supermercado
     */
    public Supermercado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeneral = new javax.swing.JPanel();
        lblClienteSinCompra = new javax.swing.JLabel();
        lblTextoClienteSinCompra = new javax.swing.JLabel();
        lblTextoPromedioEnCola = new javax.swing.JLabel();
        lblTiempoPromedio = new javax.swing.JLabel();
        pnlCajas = new javax.swing.JPanel();
        lblAtendidosCaja1 = new javax.swing.JLabel();
        lblCaja1 = new javax.swing.JLabel();
        lblAtendidosCaja2 = new javax.swing.JLabel();
        lblCaja2 = new javax.swing.JLabel();
        lblAtendidosCaja3 = new javax.swing.JLabel();
        lblCaja3 = new javax.swing.JLabel();
        btnActivar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulación de un Supermercado");
        setResizable(false);

        lblClienteSinCompra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblTextoClienteSinCompra.setText("Clientes sin compra:");

        lblTextoPromedioEnCola.setText("Tiempo promedio en cola:");

        lblTiempoPromedio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlGeneralLayout = new javax.swing.GroupLayout(pnlGeneral);
        pnlGeneral.setLayout(pnlGeneralLayout);
        pnlGeneralLayout.setHorizontalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTextoClienteSinCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTextoPromedioEnCola, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClienteSinCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTiempoPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        pnlGeneralLayout.setVerticalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTextoClienteSinCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClienteSinCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTiempoPromedio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTextoPromedioEnCola, javax.swing.GroupLayout.DEFAULT_SIZE, 17, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlCajas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes atendidos en caja", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        lblAtendidosCaja1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblCaja1.setText("Caja 1:");

        lblAtendidosCaja2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblCaja2.setText("Caja 2:");

        lblAtendidosCaja3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAtendidosCaja3.setMaximumSize(new java.awt.Dimension(14, 16));
        lblAtendidosCaja3.setMinimumSize(new java.awt.Dimension(14, 16));
        lblAtendidosCaja3.setPreferredSize(new java.awt.Dimension(14, 16));

        lblCaja3.setText("Caja 3:");

        javax.swing.GroupLayout pnlCajasLayout = new javax.swing.GroupLayout(pnlCajas);
        pnlCajas.setLayout(pnlCajasLayout);
        pnlCajasLayout.setHorizontalGroup(
            pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCajasLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lblCaja2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCaja1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblCaja3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAtendidosCaja2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAtendidosCaja1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAtendidosCaja3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCajasLayout.setVerticalGroup(
            pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCajasLayout.createSequentialGroup()
                .addGroup(pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtendidosCaja1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCaja1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtendidosCaja2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCaja2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCajasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAtendidosCaja3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCaja3))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnActivar.setText("Activar Simulación");
        btnActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCajas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActivar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCajas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnActivar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarActionPerformed
        simulacion();
    }//GEN-LAST:event_btnActivarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Supermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Supermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Supermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Supermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Supermercado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivar;
    private javax.swing.JLabel lblAtendidosCaja1;
    private javax.swing.JLabel lblAtendidosCaja2;
    private javax.swing.JLabel lblAtendidosCaja3;
    private javax.swing.JLabel lblCaja1;
    private javax.swing.JLabel lblCaja2;
    private javax.swing.JLabel lblCaja3;
    private javax.swing.JLabel lblClienteSinCompra;
    private javax.swing.JLabel lblTextoClienteSinCompra;
    private javax.swing.JLabel lblTextoPromedioEnCola;
    private javax.swing.JLabel lblTiempoPromedio;
    private javax.swing.JPanel pnlCajas;
    private javax.swing.JPanel pnlGeneral;
    // End of variables declaration//GEN-END:variables

    private void simulacion() {
        int estado1 = 0, estado2 = 0, estado3 = 0;
        int clientes_marchan = 0;
        int llegada = 2 + (int) (Math.random() * 2);
        int salida1 = -1, salida2 = -1, salida3 = -1;
        int cantAtend1 = 0, cantAtend2 = 0, cantAtend3 = 0;
        int tiempoEnCola = 0;
        int cantidadEnCola = 0;
        Cola cola1 = new Cola();
        Cola cola2 = new Cola();
        Cola cola3 = new Cola();
        
        for (int minuto = 0; minuto < 600; minuto++) {
            
            if (llegada == minuto) {
                if (estado1 == 0) {
                    estado1 = 1;
                    salida1 = minuto + 7 + (int) (Math.random() * 5);
                } else {
                    if (estado2 == 0) {
                        estado2 = 1;
                        salida2 = minuto + 7 + (int) (Math.random() * 5);
                    } else {
                        if (estado3 == 0) {
                            estado3 = 1;
                            salida3 = minuto + 7 + (int) (Math.random() * 5);
                        } else {
                            if (cola1.cantidad() == 6
                                    && cola2.cantidad() == 6
                                    && cola3.cantidad() == 6) {
                                
                                clientes_marchan++;
                            } else {
                                if (cola1.cantidad() <= cola2.cantidad() && cola1.cantidad() <= cola3.cantidad()) {
                                    
                                    cola1.insertar(minuto);
                                    
                                } else {
                                    if (cola2.cantidad() <= cola3.cantidad()) {
                                        
                                        cola2.insertar(minuto);
                                        
                                    } else {
                                        
                                        cola3.insertar(minuto);
                                        
                                    }
                                }
                            }
                        }
                    }
                }
                llegada = minuto + 2 + (int) (Math.random() * 2);
            }
            
            if (salida1 == minuto) {
                cantAtend1++;
                estado1 = 0;
                
                if (!cola1.vacia()) {
                    estado1 = 1;
                    int m = cola1.extraer();
                    salida1 = minuto + 7 + (int) (Math.random() * 5);
                    tiempoEnCola += minuto - m;
                    cantidadEnCola++;
                }
            }
            
            if (salida2 == minuto) {
                cantAtend2++;
                estado2 = 0;
                
                if (!cola2.vacia()) {
                    estado2 = 1;
                    int m = cola2.extraer();
                    salida2 = minuto + 7 + (int) (Math.random() * 5);
                    tiempoEnCola += minuto - m;
                    cantidadEnCola++;
                }
            }
            if (salida3 == minuto) {
                cantAtend3++;
                estado3 = 0;
                
                if (!cola3.vacia()) {
                    estado3 = 1;
                    int m = cola3.extraer();
                    salida3 = minuto + 7 + (int) (Math.random() * 5);
                    tiempoEnCola += minuto - m;
                    cantidadEnCola++;
                }
            }
        }
        
        lblAtendidosCaja1.setText(String.valueOf(cantAtend1));
        lblAtendidosCaja2.setText(String.valueOf(cantAtend2));
        lblAtendidosCaja3.setText(String.valueOf(cantAtend3));
        
        lblClienteSinCompra.setText(String.valueOf(clientes_marchan));
        lblTiempoPromedio.setText(String.valueOf((tiempoEnCola / cantidadEnCola)));
        
    }
}
