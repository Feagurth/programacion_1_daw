/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parsercalculadora;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.Arrays;

/**
 *
 * @author Super
 */
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextField1.setText("4*3/2+1");

        jButton1.setText("Go!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTextField1.setText(parser(jTextField1.getText()));
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private String parser(String cadena) {
        String operaciones[] = {"*", "/", "+", "-"};
        cadena = cadena.replace(" ", "");

        do {
            for (String operacion : operaciones) {

                int pos1 = cadena.indexOf(operacion);
                int pos2 = 0;
                int pos3 = 0;

                if (pos1 != -1) {
                    String ladoIzq = cadena.substring(0, pos1);
                    String ladoDer = cadena.substring(pos1 + 1, cadena.length());

                    if (stringContainsItemFromList(ladoIzq, operaciones)) {
                        pos2 = ultimaOperacion(ladoIzq, operaciones, false);
                        ladoIzq = cadena.substring(pos2, pos1);

                        System.out.println(ladoIzq);
                    }

                    if (stringContainsItemFromList(ladoDer, operaciones)) {
                        pos3 = ultimaOperacion(ladoDer, operaciones, true);
                        ladoDer = cadena.substring(pos1 + 1, (pos3 + pos1 + 1));
                        System.out.println(ladoDer);
                    }

                    BigDecimal numero1 = new BigDecimal(ladoIzq);
                    BigDecimal numero2 = new BigDecimal(ladoDer);

                    switch (operacion) {
                        case "+":
                            numero1 = numero1.add(numero2);
                            break;
                        case "-":
                            numero1 = numero1.subtract(numero2);
                            break;
                        case "*":
                            numero1 = numero1.multiply(numero2);
                            break;
                        case "/":
                            numero1 = numero1.divide(numero2, 20, RoundingMode.HALF_DOWN);
                            break;
                    }

                    if (pos2 == 0 && pos3 == 0) {
                        cadena = numero1.toString();
                    } else if (pos2 == 0) {
                        cadena = cadena.replace(cadena.substring(0, pos3 + pos1 + 1), numero1.toString());
                    } else if (pos3 == 0) {
                        cadena = cadena.replace(cadena.substring(pos2, cadena.length()), numero1.toString());
                    } else {
                        cadena = cadena.replace(cadena.substring(pos1 - pos2 + 1, pos3 + pos1 + 1), numero1.toString());
                    }
                }
            }
        } while (stringContainsItemFromList(cadena, operaciones));

        return cadena;
    }

    private static int ultimaOperacion(String cadena, String[] operaciones, boolean izqDer) {
        int salida = -1;

        for (String operacion : operaciones) {
            if (!izqDer) {

                if (salida < cadena.lastIndexOf(operacion)) {
                    salida = cadena.lastIndexOf(operacion);
                }
            } else {
                if (salida < cadena.indexOf(operacion)) {
                    salida = cadena.indexOf(operacion);
                }
            }
        }

        return (izqDer ? salida : salida + 1);
    }

    private static boolean stringContainsItemFromList(String inputString, String[] items) {
        for (String item : items) {
            if (inputString.contains(item)) {
                return true;
            }
        }
        return false;
    }

}
